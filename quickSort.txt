// funtion runs a quick sort on strings
// returns string value

// may need to rearagnge functions depending on how they are pulled into the program to begin with.....
// This is the partition step??? i think its referred to
// This will sort a given set of a string based off of a pivot point
function strPartition( txt, posLeft, posRight )
{
	var sln = txt.string.length;
	var pivot =txt.string.charAt( [ Math.floor( (posLeft + posRight) / 2) ] );
	var left = posLeft;
	var right = posRight;
	
	
	while ( left <= right )
	{
		var charLeft = txt.string.charAt(left);
		var charRight = txt.string.charAt(right);
		
		while( charLeft  < pivot )
		{
			left++;
			charLeft = txt.string.charAt(left);
		}
		
		while( charRight > pivot)
		{
			right--;
			charRight = txt.string.charAt(right);
		}
		if (  left <= right) 
		{
		  swap( txt, left, right );
		  left++;
		  right--;
		}
	}
	
	return left;  
}



//Performs a swap on two char's inside of a string based off of index value
function swap( txt , firstIndex, secondIndex)
{
			console.log(txt.string);
			var x=txt.string.charAt(firstIndex);
			console.log(x);
			var y=txt.string.charAt(secondIndex);
			console.log(y);
			txt.string.replace( x, y);   //instead of replacing the value with another value
			console.log(txt.string);
			txt.string.replace( y, x);   // I need to replace value at index with another value.... HMMMMM
											// Thie will technically work as long as the string doesn't contain 
											// the same char twice.. so ummmmmmm
			console.log(txt.string);

}


// In junction with a partition step this will perform a recursive quicksort call
function strQuickSort( txt, left, right)
{
	var pos = 0;
	
	//found this on the internet its supposed to be syntax for seting a 
	// value to left and right if the user didnt enter one...
	// should make it a much easier function to implement
	left = typeof left != "number" ? 0: left;
	right =typeof right != "number" ? txt.string.length -1 : right;
	var length = txt.string.length;
	if ( length > 1 ) 
	{
		pos = strPartition( txt, left, right);
		
		if( left < pos-1)
		{
			strQuickSort( txt, left, pos-1);
		}
		
		if( pos < right)
		{
			strQuickSort( txt, pos, right);
		}
		
	}
	
	return;
}


console.log("Hello, World!");

var txt = { string: "helowda"};
var length = txt.string.length -1;

strQuickSort( txt, 0, length);

console.log(txt.string);

console.log("finished");